-- 1. Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--   - Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
--   - Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ИД.
--   - Фильтры (AND):
--     a) Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД > 3.
--     b) Н_ВЕДОМОСТИ.ДАТА = 2022-06-08.
--   - Вид соединения: INNER JOIN.

SELECT "Н_ТИПЫ_ВЕДОМОСТЕЙ"."НАИМЕНОВАНИЕ", "Н_ВЕДОМОСТИ"."ИД" FROM "Н_ВЕДОМОСТИ"
    INNER JOIN "Н_ТИПЫ_ВЕДОМОСТЕЙ" ON "Н_ВЕДОМОСТИ"."ТВ_ИД" = "Н_ТИПЫ_ВЕДОМОСТЕЙ"."ИД"
    WHERE "Н_ТИПЫ_ВЕДОМОСТЕЙ"."ИД" > 3
        AND "Н_ВЕДОМОСТИ"."ДАТА" = '2022-06-08';

-- done

-- 2. Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--   - Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
--   - Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ДАТА.
--   - Фильтры (AND):
--     a) Н_ЛЮДИ.ОТЧЕСТВО = Сергеевич.
--     b) Н_ВЕДОМОСТИ.ИД = 1250972.
--     c) Н_СЕССИЯ.ДАТА = 2002-01-04.
--   - Вид соединения: LEFT JOIN.

SELECT "Н_ЛЮДИ"."ИД", "Н_ВЕДОМОСТИ"."ДАТА", "Н_СЕССИЯ"."ДАТА" FROM "Н_ВЕДОМОСТИ"
    LEFT JOIN "Н_СЕССИЯ" on "Н_ВЕДОМОСТИ"."СЭС_ИД" = "Н_СЕССИЯ"."СЭС_ИД"
    LEFT JOIN "Н_ЛЮДИ" on "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
    WHERE "Н_СЕССИЯ"."ДАТА" = '2002-01-04'
        AND "Н_ВЕДОМОСТИ"."ИД" = '1250972'
        AND "Н_ЛЮДИ"."ОТЧЕСТВО" = 'Сергеевич';

-- done

-- 3. Вывести число студентов группы 3102, которые не имеет отчества.
--   Ответ должен содержать только одно число.

SELECT COUNT(*) FROM "Н_УЧЕНИКИ"
    INNER JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
    WHERE "Н_УЧЕНИКИ"."ГРУППА" = '3102'
        AND "Н_ЛЮДИ"."ОТЧЕСТВО" IS NULL;

-- think about joins

-- 4. Найти группы, в которых в 2011 году было ровно 10 обучающихся студентов на кафедре вычислительной техники.
--   Для реализации использовать соединение таблиц.

SELECT "Н_УЧЕНИКИ"."ГРУППА", COUNT("Н_УЧЕНИКИ"."ИД") FROM "Н_ПЛАНЫ"
    INNER JOIN "Н_ОТДЕЛЫ" ON "Н_ПЛАНЫ"."ОТД_ИД_ЗАКРЕПЛЕН_ЗА" = "Н_ОТДЕЛЫ"."ИД"
    INNER JOIN "Н_УЧЕНИКИ" ON "Н_ПЛАНЫ"."ИД" = "Н_УЧЕНИКИ"."ПЛАН_ИД"
    WHERE "Н_ОТДЕЛЫ"."ИМЯ_В_ИМИН_ПАДЕЖЕ" = 'кафедра вычислительной техники'
        AND "Н_ПЛАНЫ"."УЧЕБНЫЙ_ГОД" = '2010/2011'
    GROUP BY "Н_УЧЕНИКИ"."ГРУППА"
    HAVING COUNT("Н_УЧЕНИКИ"."ИД") = 10;

-- think about joins

-- 5. Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка не больше минимальной оценки в группе 3100.

-- min point in group
SELECT * FROM "Н_УЧЕНИКИ"
    INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
    WHERE "Н_УЧЕНИКИ"."ГРУППА" = '3100'
        AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2345]$';

SELECT "Н_УЧЕНИКИ"."ЧЛВК_ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО", AVG("Н_ВЕДОМОСТИ"."ОЦЕНКА"::INT) FROM "Н_УЧЕНИКИ"
    INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
    INNER JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
    WHERE "Н_УЧЕНИКИ"."ГРУППА" = '4100'
    AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2345]$'
    GROUP BY ("Н_УЧЕНИКИ"."ЧЛВК_ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО")
    HAVING AVG("Н_ВЕДОМОСТИ"."ОЦЕНКА"::INT) <= (
        SELECT MIN("Н_ВЕДОМОСТИ"."ОЦЕНКА"::INT) FROM "Н_УЧЕНИКИ"
            INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
            WHERE "Н_УЧЕНИКИ"."ГРУППА" = '3100'
                AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2345]$'
    );

-- done

-- 6. Получить список студентов, отчисленных после первого сентября 2012 года
-- с заочной формы обучения (специальность: Программная инженерия). В результат включить:
--   - номер группы;
--   - номер, фамилию, имя и отчество студента;
--   - номер пункта приказа;
-- Для реализации использовать подзапрос с IN.

SELECT "Н_УЧЕНИКИ"."ГРУППА", "Н_УЧЕНИКИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО", "Н_УЧЕНИКИ"."П_ПРКОК_ИД" FROM "Н_УЧЕНИКИ"
    INNER JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
    INNER JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_УЧЕНИКИ"."ВИД_ОБУЧ_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
    INNER JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
    WHERE "Н_ПЛАНЫ"."НАПС_ИД" IN (
        SELECT "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."ИД" FROM "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"
            WHERE "НС_ИД" IN (
                SELECT "ИД" FROM "Н_НАПР_СПЕЦ"
                WHERE "НАИМЕНОВАНИЕ" = 'Программная инженерия'
            )
    )
--     AND "Н_УЧЕНИКИ"."ПРИЗНАК" = 'обучен'
    AND "ПРИЗНАК" = 'отчислен'
    AND "Н_УЧЕНИКИ"."СОСТОЯНИЕ" = 'утвержден'
--     AND "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Очная'
    AND "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Заочная'
    AND DATE("Н_УЧЕНИКИ"."КОНЕЦ") > '2012-09-01'
;

-- plans with program engineering speciality

SELECT * FROM "Н_ПЛАНЫ"
    WHERE "НАПС_ИД" IN (
        SELECT "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."ИД" FROM "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"
            WHERE "НС_ИД" = (
                SELECT "ИД" FROM "Н_НАПР_СПЕЦ"
                    WHERE "НАИМЕНОВАНИЕ" = 'Программная инженерия'
            )
    )
;

SELECT * FROM "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"
    WHERE "НС_ИД" IN (
        SELECT "ИД" FROM "Н_НАПР_СПЕЦ"
            WHERE "НАИМЕНОВАНИЕ" = 'Программная инженерия'
    )
;

-- все формы обучения в планах
SELECT "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД", "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" FROM "Н_ПЛАНЫ"
    LEFT JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
    GROUP BY ("Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД", "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ");

--

-- 7. Сформировать запрос для получения числа в СПбГУ ИТМО отличников.

SELECT COUNT(*) FROM "Н_ЛЮДИ"
    WHERE (
        SELECT COUNT(*) != 0
                AND COUNT(*) = COUNT(CASE WHEN "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^(зачет|осв|5|99)$' THEN 1 END) FROM "Н_ВЕДОМОСТИ"
            INNER JOIN "Н_СЕССИЯ" ON "Н_ВЕДОМОСТИ"."СЭС_ИД" = "Н_СЕССИЯ"."СЭС_ИД"
            WHERE "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
                AND "Н_СЕССИЯ"."УЧГОД" = '2010/2011'
                AND "Н_СЕССИЯ"."СЕМЕСТР" = '1'
    )
;

-- оценки человека в семестре
SELECT * FROM "Н_ВЕДОМОСТИ"
    INNER JOIN "Н_СЕССИЯ" ON "Н_ВЕДОМОСТИ"."СЭС_ИД" = "Н_СЕССИЯ"."СЭС_ИД"
    WHERE "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = 137791
        AND "Н_СЕССИЯ"."УЧГОД" = '2010/2011'
        AND "Н_СЕССИЯ"."СЕМЕСТР" = '1';

-- все типы оценок
SELECT * FROM "Н_ОЦЕНКИ";

-- donw